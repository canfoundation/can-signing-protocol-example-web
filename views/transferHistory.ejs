<!DOCTYPE html>

<html>
  <head>
    <title>Transfer History</title>

    <% include components/head-common.ejs %> <% include components/head-highlight-code.ejs %>
  </head>

  <body>
    <% include components/header.ejs %>

    <div class="container">
      <br />
      <% if (token) { %>
      <div class="row">
        <form class="col m9">
          <div class="row">
            <div class="input-field col m4">
              <input placeholder="CAN Account " id="account" type="text" class="validate" />
              <label for="account">CAN Account </label>
            </div>

            <div class="input-field col m4">
              <input id="code" type="text" class="validate" value="eosio.token" />
              <label for="code">Code</label>
            </div>

            <div class="input-field col m4">
              <input id="symbol" type="text" class="validate" value="CAT" />
              <label for="symbol">Symbol</label>
            </div>
          </div>
        </form>

        <div class="col m3">
          <button
            class="btn waves-effect waves-light"
            type="button"
            onclick="handleQueryTransferHistory()"
          >
            Query History
          </button>
        </div>
      </div>

      <div class="row">
        <table class="responsive-table striped highlight" id="transfer-history-table"></table>
      </div>
      <% } %>

      <div class="row">
        <a
          href="https://explorer.canfoundation.io/v2/docs/index.html#/history/get_v2_history_get_transfer"
          target="_blank"
        >
          API spec
        </a>
        <div class="col s12"><% include components/id-display-sample-snippet.ejs %></div>
      </div>
    </div>

    <script id="query-transfer-history">
      /**
       * API spec:
       * https://explorer.canfoundation.io/v2/docs/index.html#/history/get_v2_history_get_transfer
       */
      function queryTransferHistory({ account, code, symbol }) {
        const urlSearchParams = new URLSearchParams();

        if (account) {
          urlSearchParams.append('account', account);
        }

        if (code) {
          urlSearchParams.append('code', code);
        }

        if (symbol) {
          urlSearchParams.append('symbol', symbol);
        }

        return fetch(
          `https://explorer.canfoundation.io/v2/history/get_transfer?${urlSearchParams.toString()}`,
        ).then((res) => res.json());
      }
    </script>

    <script>
      const inputAccountEl = document.getElementById('account');
      const inputCodeEl = document.getElementById('code');
      const inputSymbolEl = document.getElementById('symbol');
      const tableEl = document.getElementById('transfer-history-table');

      /**
       * get current user's CAN account
       */
      function getMyCanAccount() {
        return fetch('/getMyCanAccount').then((res) => res.json());
      }

      function handleQueryTransferHistory() {
        const account = document.getElementById('account').value;
        const code = inputCodeEl.value;
        const symbol = inputSymbolEl.value;

        queryTransferHistory({
          account,
          code,
          symbol,
        }).then((data) => updateHistoryTable(data.simple_actions));
      }

      const tHeadNames = {
        Transaction: {
          prop: 'transaction_id',
          transform(v) {
            const short = v.substr(0, 8);
            // make a link to the explorer
            return `<a target="_blank" href="https://explorer.canfoundation.io/v2/explore/transaction/${v}">${short}...</a>`;
          },
        },
        Sender: 'data.from',
        Receiver: 'data.to',
        Quantity: {
          prop: 'data.quantity',
          width: '15%',
        },
        Timestamp: {
          prop: 'timestamp',
          width: '25%',
        },
        Memo: {
          prop: 'data.memo',
          width: '30%',
        },
      };

      function initTable() {
        const header = tableEl.createTHead();
        const row = header.insertRow(0);
        Object.keys(tHeadNames).forEach((k) => {
          const th = document.createElement('th');
          th.innerText = k;

          const width = tHeadNames[k].width;
          if (width) {
            th.setAttribute('width', width);
          }

          row.appendChild(th);
        });
      }

      function updateHistoryTable(simple_actions) {
        const table = document.getElementById('transfer-history-table');
        table.create;

        // reset rows -- remove last tbody
        const tbody = document.getElementsByTagName('tbody')[0];
        if (tbody) {
          table.removeChild(tbody);
        }

        const bodyEl = document.createElement('tbody');
        table.appendChild(bodyEl);

        // add rows
        simple_actions.forEach((transfer, rowIdx) => {
          const row = bodyEl.insertRow(rowIdx);

          Object.keys(tHeadNames).forEach((k, i) => {
            const cell = row.insertCell(i);
            cell.innerHTML = get(transfer, tHeadNames[k]);
          });
        });
      }

      function get(obj, key) {
        let transform;

        if (typeof key == 'object') {
          transform = key.transform;
          key = key.prop;
        }

        const keys = key.split('.');

        let v = obj;
        for (const k of keys) {
          v = v[k];

          if (typeof v !== 'object') {
            break;
          }
        }

        return typeof transform == 'function' ? transform(v) : v;
      }
    </script>

    <script>
      (() => {
        // set default account to current login user
        getMyCanAccount().then((a) => (inputAccountEl.value = a));

        // init table
        initTable();

        // show formated code snippet
        document.getElementById('id-display-sample-snippet').innerText = document.getElementById(
          'query-transfer-history',
        ).innerText;

        // format code
        hljs.initHighlightingOnLoad();
      })();
    </script>
  </body>
</html>

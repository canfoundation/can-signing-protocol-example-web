<!DOCTYPE html>

<html>
  <head>
    <title>Sign transaction sample</title>

    <meta charset="utf-8" />
    <meta name="viewport" content="minimum-scale=1, initial-scale=1, width=device-width" />

    <!-- Compiled and minified CSS -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css"
    />

    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
  </head>

  <body>
    <div class="container">
      <br />
      <div class="row">
        <div class="col s12">
          <div class="right-align">
            <% if (!token) { %>
            <button
              class="can-pass-login-button"
              data-redirect-uri="http://localhost:3002/auth/cryptobadge/callback"
              data-state="random string"
              data-domain="https://test.canpass.me"
              data-text="Sign in with can-pass"
            ></button>
            <% } else { %>
            <a href="/logout">Logout</a>
            <% } %>
          </div>
        </div>
      </div>

      <% if (token) { %>
      <div class="row">
        <div class="col m8 offset-m4">
          <table>
            <thead>
              <tr>
                <th>name</th>
                <th>value</th>
              </tr>
            </thead>

            <tbody>
              <tr>
                <td>access_token</td>
                <td id="access_token"><%= token.access_token %></td>
              </tr>
              <tr>
                <td>token_type</td>
                <td><%= token.token_type %></td>
              </tr>
              <tr>
                <td>expires_in</td>
                <td><%= token.expires_in %></td>
              </tr>
              <tr>
                <td>refresh_token</td>
                <td><%= token.refresh_token %></td>
              </tr>
              <tr>
                <td>scope</td>
                <td><%= token.scope %></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <div class="row">
        <div class="col m2">
          <button class="btn waves-effect waves-light" onclick="tranferCat()">Tranfer 1 CAT</button>
        </div>

        <div class="col m10">
          <pre id="id-transaction-data"></pre>
        </div>
      </div>

      <% } %>
    </div>

    <script src="/can-pass-api.js"></script>

    <script>
      const canPass = window.CanPass && window.CanPass.getInstance();
      const accessToken = '<%= token.access_token %>';
      canPass.init({
        clientId: '514744fe2356ecd585789ebddfecb087',
        version: '1.0',
        /**
         * can-pass service to which the request signing transaction is sent
         */
        endPoint: 'https://dev.api.cryptobadge.app/can-keys-test/graphql',

        /**
         * can-pass consent page which the user puts his credential for signing the transaction
         * This should be optional.
         */
        signTxURL: 'https://test.canpass.me/auth/sign-transaction',

        logger: console,
        store: `localStore`,
      });

      // init loggin button
      canPass.loginButton();

      // after loggin successfully, the access-token need to be set to canPass instance
      // without this access-token, the can-pass instance can not make a sign transaction request
      canPass.setCredentials({ accessToken });

      const tx = {
        actions: [
          {
            account: 'eosio.token',
            name: 'transfer',
            authorization: [
              {
                actor: 'kgohocpz2p3u',
                permission: 'active',
              },
            ],
            data: {
              memo: 'Transfer CAT 1',
              from: 'kgohocpz2p3u',
              to: 'zj1e5k5q2wrm',
              quantity: '1.0000 CAT',
            },
          },
        ],
      };

      document.getElementById('id-transaction-data').innerText = JSON.stringify(tx, null, 2);

      function tranferCat() {
        canPass.signTx(tx, 'RequestSignTxOptions', (error, tx) => {
          if (error) {
            console.log('Fail', error);
          } else {
            console.log('Sign Success', tx);
          }
        });
      }
    </script>
  </body>
</html>
